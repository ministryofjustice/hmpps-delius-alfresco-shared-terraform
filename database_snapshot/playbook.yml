---
- name: Create
  hosts: localhost
  connection: local
  vars_files:
    - vars/snapshot-vars.yml
  tasks:
    - name: get aws creds from iam role for execution
      sts_assume_role:
        role_arn: "{{ terragrunt_iam_role }}"
        role_session_name: ci-build
        profile: "{{ iam_user_profile }}"
      register: assumed_role

    - name: set ansible environment facts for execution
      set_fact:
        aws_access_key_id: "{{ assumed_role.sts_creds.access_key }}"
        aws_secret_access_key: "{{ assumed_role.sts_creds.secret_key }}"
        aws_security_token: "{{ assumed_role.sts_creds.session_token }}"

    - name: load json variables
      set_fact:
        db_info: "{{ lookup('file', 'output.json') | from_json }}"

    - name: set db instance fact
      set_fact:
        db_instance: "{{ db_info['db_instance']['value'] }}"

    # - name: delete alfresco snapshot
    #   rds_snapshot:
    #     db_snapshot_identifier: "{{ snapshot_name }}"
    #     state: absent
    #     aws_access_key: "{{ aws_access_key_id }}"
    #     aws_secret_key: "{{ aws_secret_access_key }}"
    #     security_token: "{{ aws_security_token }}"
    #     wait: yes

    # - name: create alfresco snapshot
    #   rds_snapshot:
    #     db_instance_identifier: "{{ db_instance }}"
    #     db_snapshot_identifier: "{{ snapshot_name }}"
    #     aws_access_key: "{{ aws_access_key_id }}"
    #     aws_secret_key: "{{ aws_secret_access_key }}"
    #     security_token: "{{ aws_security_token }}"
    #     wait: yes

    - name: retrieve snapshot information
      rds_snapshot_info:
        db_snapshot_identifier: "{{ snapshot_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
      register: snapshot_raw_info

    - name: set snapshot facts
      set_fact:
        snapshot_info: "{{ snapshot_raw_info['snapshots'][0]}}"

    # - name: render snapshot permissions script
    #   template:
    #     src: templates/update-snapshot-permissions.sh.j2
    #     dest: "{{ playbook_dir }}/update-snapshot-permissions.sh"

    # - name: update snapshot permissions
    #   command: "sh {{ playbook_dir }}/update-snapshot-permissions.sh"

    - name: get aws creds for target account
      sts_assume_role:
        role_arn: "{{ target_iam_role }}"
        role_session_name: ci-build
        profile: "{{ iam_user_profile }}"
      register: assumed_role

    - name: set ansible environment facts for target account
      set_fact:
        aws_access_key_id: "{{ assumed_role.sts_creds.access_key }}"
        aws_secret_access_key: "{{ assumed_role.sts_creds.secret_key }}"
        aws_security_token: "{{ assumed_role.sts_creds.session_token }}"

    - name: target delete alfresco snapshot
      rds_snapshot:
        db_snapshot_identifier: "{{ item }}"
        state: absent
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        wait: yes
      with_items:
        - "{{ snapshot_name }}-final"
        - "{{ snapshot_name }}"

    - name: get target rds instance
      rds_instance_info:
        db_instance_identifier: "{{ target_instance_id }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
      register: instance_info

    - name: set target instance facts
      set_fact:
        target_instance: "{{ instance_info['instances'][0] }}"

    - name: render snapshot copy script
      template:
        src: templates/copy-snapshot.sh.j2
        dest: "{{ playbook_dir }}/copy-snapshot.sh"
      vars:
        src_snapshot_arn: "{{ snapshot_info['db_snapshot_arn'] }}"
        target_kms_key: "{{ target_instance['kms_key_id'] }}"

    # - name: copy snapshot target
    #   command: "sh {{ playbook_dir }}/copy-snapshot.sh"

    # - name: remove the target instance with a final snapshot
    #   rds_instance:
    #     id: "{{ target_instance_id }}"
    #     state: absent
    #     final_snapshot_identifier: "{{ snapshot_name }}_final"

    - name: debug target
      debug:
        msg: "{{ target_instance }}"
