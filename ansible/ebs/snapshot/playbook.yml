---
- name: Create RDS snapshot
  hosts: localhost
  connection: local
  vars_files:
    - ../../vars/common-vars.yml
  tasks:
    - name: load json variables
      set_fact:
        env_info: "{{ lookup('file', '../../data.json') | from_json }}"

    - name: set base facts
      set_fact:
        src_account: "{{ env_info['source']['account_id'] }}"
        target_account: "{{ env_info['targets'][environment_name]['account_id'] }}"
        vol_name: "{{ env_info['source']['solr_vol_name'] }}"
        kms_key: "{{ env_info['source']['vol_kms_id']}}"

    - name: source volume name
      debug:
        msg: "{{ vol_name }}"

    - name: set iam role facts
      set_fact:
        target_iam_role: "{{ 'arn:aws:iam::' + src_account + ':role/terraform' }}"

    - name: get aws credentials
      include: ../../creds/playbook.yml

    - name: get volume details
      ec2_vol_info:
        filters:
          "tag:Name": "{{ vol_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
      register: vol_info

    - name: set volume facts
      set_fact:
        vol_id: "{{ vol_info.volumes[0].id }}"
        snapshot_name: "{{ lookup('env', 'EBS_SNAPSHOT_NAME') or 'solr_refresh_snapshot' }}"

    - name: create solr volume snapshot
      ec2_snapshot:
        volume_id: "{{ vol_id }}"
        description: "{{ snapshot_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
        wait: yes
        wait_timeout: 5400
        last_snapshot_min_age: 60
      register: snapshot_info

    - name: set snapshot facts
      set_fact:
        snapshot_id: "{{ snapshot_info.snapshot_id }}"

    - name: retrieve old refresh snapshot
      ec2_snapshot_info:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ snapshot_name }}"
      register: refresh_snapshot

    - name: delete old solr src snapshot
      ec2_snapshot:
        snapshot_id: "{{ refresh_snapshot.snapshots[0].snapshot_id }}"
        state: absent
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
      when: refresh_snapshot.snapshots != []

    - name: create source snapshot
      ec2_snapshot_copy:
        source_region: "{{ aws_region }}"
        source_snapshot_id: "{{ snapshot_id }}"
        encrypted: yes
        kms_key_id: "{{ kms_key }}"
        tags:
          Name: "{{ snapshot_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
        wait: yes
        wait_timeout: 5400
      register: src_snapshot

    - name: set volume facts
      set_fact:
        src_snapshot_id: "{{ src_snapshot.snapshot_id }}"

    - name: render snapshot permissions script
      template:
        src: templates/update-snapshot-permissions.sh.j2
        dest: "{{ playbook_dir }}/update-snapshot-permissions.sh"
        mode: 0600

    - name: update snapshot permissions
      command: "sh {{ playbook_dir }}/update-snapshot-permissions.sh"

    - name: set iam role facts
      set_fact:
        target_iam_role: "{{ 'arn:aws:iam::' + target_account + ':role/terraform' }}"

    - name: get aws credentials
      include: ../../creds/playbook.yml

    - name: retrieve old refresh snapshot in target account
      ec2_snapshot_info:
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
        filters:
          "tag:Name": "{{ snapshot_name }}"
      register: refresh_snapshot

    - name: delete old copy of solr snapshot
      ec2_snapshot:
        snapshot_id: "{{ refresh_snapshot.snapshots[0].snapshot_id }}"
        state: absent
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
      when: refresh_snapshot.snapshots != []

    - name: create snapshot copy in target account
      ec2_snapshot_copy:
        source_region: "{{ aws_region }}"
        source_snapshot_id: "{{ src_snapshot_id }}"
        encrypted: yes
        tags:
          Name: "{{ snapshot_name }}"
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"
        wait: yes
        wait_timeout: 5400
      register: target_snapshot

    - name: set src account iam role creds
      set_fact:
        target_iam_role: "{{ 'arn:aws:iam::' + src_account + ':role/terraform' }}"

    - name: renew src aws credentials
      include: ../../creds/playbook.yml

    - name: delete solr snapshot in src account
      ec2_snapshot:
        snapshot_id: "{{ src_snapshot_id }}"
        state: absent
        aws_access_key: "{{ aws_access_key_id }}"
        aws_secret_key: "{{ aws_secret_access_key }}"
        security_token: "{{ aws_security_token }}"
        region: "{{ aws_region }}"

    - name: source snapshot id
      debug:
        msg: "{{ src_snapshot_id }}"

    - name: target snapshot id
      debug:
        msg: "{{ target_snapshot }}"
